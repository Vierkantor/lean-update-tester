name: "Mathlib update checker"
description: "Determines which Mathlib releases are available for the project to upgrade to."
inputs:
  legacy_update:
    description: |
      If set to `true`, executes `lake -R -Kenv=dev update` instead of `lake update`.
    required: false
    default: "false"
outputs:
  is-update-available:
    description: "Is there a new version available that can be updated to?"
    value: ${{ steps.check-for-updates.outputs.is-update-available }}
  new-tags:
    description: "New Mathlib release tags, as a JSON array of strings."
    value: ${{ steps.check-for-updates.outputs.new-tags }}
runs:
  using: "composite"
  steps:
    - name: Checkout the repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-tags: true
    - name: Configure Lean
      uses: leanprover/lean-action@f807b338d95de7813c5c50d018f1c23c9b93b4ec # 2025-04-24
      with:
        auto-config: false
        use-github-cache: false
        use-mathlib-cache: false
        reinstall-transient-toolchain: true
    - name: "Check for Mathlib updates"
      id: check-for-updates
      run: node "${{ github.action_path }}/dist/index.js"
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
        LEGACY_UPDATE: ${{ inputs.legacy_update }}
    - name: "Upload the new metadata (toolchains and manifests)"
      if: ${{ steps.check-for-updates.outputs.is-update-available }}
      uses: actions/upload-artifact@v4
      with:
        name: update-metadata
        path: mathlib-update-metadata/
